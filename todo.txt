+ sprawdzanie czy zmienna jest zainicjowana gdy siê jej u¿ywa
+ strict mode
+ brak nawiasów, brak œredników
+ optymalizacja: SET_VAR, X; POP -> POP_VAR, X
+ optymalizacja: obliczanie sta³ych
+ optymalizacja: string pooling
+ wykrywanie nieu¿ywanych zmiennych
+ wykrywanie nieu¿ywanych funkcji
+ char
+ if z jednym expr pod
+ optymalizacja u¿ywania wartoœci ze stosu (np int x = getint(); if(x > 0) ...
+ optymalizacja litera³ów jako float jeœli potrzeba (np. float a = getfloat(); float = 2*a;) aktualnie to zrobi PUSH_INT, 2; CAST, FLOAT; PUSH_VAR, A; MUL
+ compound assignment
+ ++ --
+ for
+ u¿ywanie zmiennych z poza funkcji
+ mo¿lwioœæ u¿ywania funkcji które s¹ przed ich wywo³aniem
+ wykrywanie kodu po return
+ wykrywanie braku zwracanej wartoœci w return
+ niektóre Node leakuja gdy sie cos wysypie
+ if(const)
+ statementy które nic nie robi¹ "1;", "a;" "2+2"
